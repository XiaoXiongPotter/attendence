// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.hangsheng.kaoqin.service.impl;

import com.hangsheng.kaoqin.domain.Staff;
import com.hangsheng.kaoqin.repository.StaffRepository;
import com.hangsheng.kaoqin.service.impl.StaffServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect StaffServiceImpl_Roo_Service_Impl {
    
    declare @type: StaffServiceImpl: @Service;
    
    declare @type: StaffServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private StaffRepository StaffServiceImpl.staffRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param staffRepository
     */
    @Autowired
    public StaffServiceImpl.new(StaffRepository staffRepository) {
        setStaffRepository(staffRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return StaffRepository
     */
    public StaffRepository StaffServiceImpl.getStaffRepository() {
        return staffRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param staffRepository
     */
    public void StaffServiceImpl.setStaffRepository(StaffRepository staffRepository) {
        this.staffRepository = staffRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param staff
     */
    @Transactional
    public void StaffServiceImpl.delete(Staff staff) {
        getStaffRepository().delete(staff);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Staff> StaffServiceImpl.save(Iterable<Staff> entities) {
        return getStaffRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void StaffServiceImpl.delete(Iterable<Long> ids) {
        List<Staff> toDelete = getStaffRepository().findAll(ids);
        getStaffRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Staff
     */
    @Transactional
    public Staff StaffServiceImpl.save(Staff entity) {
        return getStaffRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Staff
     */
    public Staff StaffServiceImpl.findOne(Long id) {
        return getStaffRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Staff
     */
    public Staff StaffServiceImpl.findOneForUpdate(Long id) {
        return getStaffRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Staff> StaffServiceImpl.findAll(Iterable<Long> ids) {
        return getStaffRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Staff> StaffServiceImpl.findAll() {
        return getStaffRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long StaffServiceImpl.count() {
        return getStaffRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Staff> StaffServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getStaffRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Staff> StaffServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getStaffRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param mac
     * @param pageable
     * @return Page
     */
    public Page<Staff> StaffServiceImpl.findByMacAllIgnoreCase(String mac, Pageable pageable) {
        return getStaffRepository().findByMacAllIgnoreCase(mac, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param mac
     * @return Long
     */
    public long StaffServiceImpl.countByMacAllIgnoreCase(String mac) {
        return getStaffRepository().countByMacAllIgnoreCase(mac);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Staff> StaffServiceImpl.getEntityType() {
        return Staff.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> StaffServiceImpl.getIdType() {
        return Long.class;
    }
    
}
