// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.hangsheng.kaoqin.web;

import com.hangsheng.kaoqin.domain.Attendance;
import com.hangsheng.kaoqin.service.api.AttendanceService;
import com.hangsheng.kaoqin.web.AttendancesItemJsonController;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect AttendancesItemJsonController_Roo_JSON {
    
    declare @type: AttendancesItemJsonController: @RestController;
    
    declare @type: AttendancesItemJsonController: @RequestMapping(value = "/attendances/{attendance}", name = "AttendancesItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param attendanceService
     */
    @Autowired
    public AttendancesItemJsonController.new(AttendanceService attendanceService) {
        this.attendanceService = attendanceService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Attendance
     */
    @ModelAttribute
    public Attendance AttendancesItemJsonController.getAttendance(@PathVariable("attendance") Long id) {
        Attendance attendance = attendanceService.findOne(id);
        if (attendance == null) {
            throw new NotFoundException(String.format("Attendance with identifier '%s' not found",id));
        }
        return attendance;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param attendance
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> AttendancesItemJsonController.show(@ModelAttribute Attendance attendance) {
        return ResponseEntity.ok(attendance);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param attendance
     * @return UriComponents
     */
    public static UriComponents AttendancesItemJsonController.showURI(Attendance attendance) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(AttendancesItemJsonController.class).show(attendance))
            .buildAndExpand(attendance.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedAttendance
     * @param attendance
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> AttendancesItemJsonController.update(@ModelAttribute Attendance storedAttendance, @Valid @RequestBody Attendance attendance, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        attendance.setId(storedAttendance.getId());
        getAttendanceService().save(attendance);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param attendance
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> AttendancesItemJsonController.delete(@ModelAttribute Attendance attendance) {
        getAttendanceService().delete(attendance);
        return ResponseEntity.ok().build();
    }
    
}
